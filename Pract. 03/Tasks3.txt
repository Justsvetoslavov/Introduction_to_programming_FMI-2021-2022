#Никола Светославов - task3

## Задачи

1.Да се напише програма, която приема естествено число n и изписва стълба от 1 до n

Пример
Вход: 5
Изход:
1
12
123
1234
12345

2.Да се състави програма, която по въведено естествено число n да изведе всички естествени решения на уравнението x + y = n.

Пример
Вход: 4
Изход:
x = 1 y = 3
x = 2 y = 2
x = 3 y = 1


3.Напишете програма, която по въведено цяло положително число, извежда квадратът на това число, но в обратен ред, като водещите нули се игнорират.

Пример
Вход: 10
Изход: 1

Вход: 25
Изход: 526

4.Напишете програма, която приема от потребителя две цели положителни числа - *m* и *n*.
  Програмата да отпечата числатаот 1 до m*n, като на всеки ред има по *n* числа (тоест ще отпечатате *m* реда).
  Печатайте числата по редове:

Пример
Вход: 2 3
Изход: 1 2 3
       4 5 6

5.Напишете проста игра, в която първо се въвежда цяло число в интервала [0;100] и в последствие се въвеждат цели числа
  (предположения), като за всяко се казва дали е по - малко или по - голямо от първоначално ваведеното.
  Tова продължава до въвеждане на число, равно на първоначалното. Програмата да отпечата и броят направени предположения.

6. Напишете програма, която иска от потребителя поредица от цели числа по - големи от 0.
   Въвеждането приключва с въвеждане на 0. Гарантирано е, че всяко от числата е въведено **точно два пъти** освен едно,
   което е въведено **точно веднъж**. Програмата да изведе кое е това число.

7.Да се състави програма, която по въведено естествено число N намира и отпечатва всички тройки естествени числа a, b и c, не по-големи от N, които могат да бъдат страни на правоъгълен триъгълник.

Пример
Вход: 11
Изход
3 4 5
6 8 10

Пример
Вход
5
Изход
2 3 4
2 4 5
3 4 5

8.Напишете програма, която иска от потребителя вход цифра N[2;9] и символ S.Програмата да извежда фигура съставена от символа във вид на ромб, както е показано на примерите.

Пример
Вход: 4 *
Изход
    *
   ***
  *****
 *******
*********
 *******
  *****
   ***
    *

*Бонус*
Задача ЕЛЕКТРОНЕН ЧАСОВНИК
В големия нов МОЛ в града на програмистите се повредили част от цифрите на електронния часовник.
Повредени били първата цифра от числото, което показва часовете, втората цифра на числото, което показва минутите и първата цифра на числото, което показва секундите.
Вместо тях на екрана се появявал знака *.
Когато Коко и приятелите му ходели на кино, те не успявали да преценят точно колко е часа.
Все пак, момчетата си създали система за изчисление, която приблизително точно им показвало времето.
Те успявали да предвидят колко е показвал часовника в началото и края на филма, в случай че знаят точно колко време е минало.
Срещу името на всеки филм на входа на киното е дадено неговото времетраене в часове, минути и секунди.
Пресмятанията доста затрудняват момчетата и затова на тях ще им е по-удобно това да се прави с компютърна програма.
Те не разбират много от програмиране и затова вие трябва да напишете програма clock, която помага на Коко и приятелите му.

Вход:
На първия ред на стандартния вход е записана последователност от цифри и знака *, която показва какво се вижда на екрана на часовника в началото на филма.
На втория ред е записана подобна последователност за показанието на часовника в края на филма.
На третия ред се въвежда продължителността на филма в часове, минути и секунди.
Часовникът е настроен така, че показва времето по 12-часова скала, а не по 24-часова.

Изход:
На стандартния изход изведете всички възможни показания на часовника за началото и края на филма.
Всяка двойка с начален и краен час се извежда на един ред, като първо се извежда началното показание във формат hh:mm:ss, и след един интервал крайното показание в същия формат.
Ако такива показания на часовника не са възможни, да се изведе “Impossible”.

Ограничения:
Продължителността на филма е не по-голяма 12 часа.

Примери:

Вход:
*25**6
*10**2
10 19 26
Изход:
02:50:06 01:09:32
02:50:16 01:09:42
02:50:26 01:09:52
12:50:06 11:09:32
12:50:16 11:09:42
12:50:26 11:09:52

Вход:
*95**6
*21**2
4 12 6
Изход:
Impossible
